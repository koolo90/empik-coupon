plugins {
    id 'java'
    id 'war'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.brocode.recruitment.empik'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.8'
    implementation 'com.maxmind.geoip2:geoip2:4.3.1'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.5'

    compileOnly 'org.projectlombok:lombok'

    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'

    annotationProcessor 'org.projectlombok:lombok'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}


war {
    archiveFileName = "empik-coupon.war"
}

tasks.register('redeploy', Exec) {
    group = 'deployment'
    dependsOn war

    def targetPort = project.hasProperty("port") ? project.property("port") : 8080
    def warTaskByName = tasks.war
    def archiveFileName = warTaskByName.archiveFileName.get()
    def deployPath = "/" + warTaskByName.archiveFileName.get().replace(".war", "")
    def buildDir = layout.buildDirectory.get()
    def warFile = file("$buildDir/libs/${archiveFileName}")
    def port = targetPort
    def host = "127.0.0.1"
    def user = "script"
    def pass = "s3cret"
    def url = "http://${host}:${port}/manager/text/deploy?path=${deployPath}&update=true"
    def authentification = "${user}:${pass}"

    println "Execution of command: curl -u ${authentification} -T ${warFile} ${url}"

    commandLine 'curl', '-u', authentification, '-T', warFile, url
}